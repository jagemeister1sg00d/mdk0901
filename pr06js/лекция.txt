
Практическая работа 6. Базовые операции и управляющие конструкции в Javascript
Цель

Освоить базовые операции, условные конструкции и циклы в JavaScript. Научиться применять их для решения практических задач.
Ход работы

    Изучить теоретический материал
    Выполнить практический пример
    Решить задание согласно варианту
    Протестировать программу
    Оформить отчет в README.md
    Загрузить работу в Gogs

Теоретическая часть
Базовые операции

    Арифметические операции: +, -, *, /, %, **
    Операторы сравнения: ==, ===, !=, !==, >, <, >=, <=
    Логические операторы: &&, ||, !
    Операторы присваивания: =, +=, -=, *=, /=

Управляющие конструкции

    Условные операторы: if...else, switch...case
    Циклы: for, while, do...while
    Операторы управления циклом: break, continue

Практический пример

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Практическая работа - Базовые операции JavaScript</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Калькулятор оценок</h1>
        <div class="input-group">
            <label for="score">Введите балл (0-100):</label>
            <input type="number" id="score" min="0" max="100">
            <button onclick="calculateGrade()">Рассчитать оценку</button>
        </div>
        <div id="result" class="result"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>

/* styles.css */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

.container {
    background: white;
    padding: 2rem;
    border-radius: 10px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    max-width: 500px;
    width: 100%;
}

h1 {
    text-align: center;
    color: #333;
    margin-bottom: 1.5rem;
}

.input-group {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

label {
    font-weight: bold;
    color: #555;
}

input {
    padding: 0.75rem;
    border: 2px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;
}

input:focus {
    outline: none;
    border-color: #667eea;
}

button {
    padding: 0.75rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1rem;
    cursor: pointer;
    transition: transform 0.2s;
}

button:hover {
    transform: translateY(-2px);
}

.result {
    padding: 1rem;
    border-radius: 5px;
    text-align: center;
    font-weight: bold;
    font-size: 1.1rem;
}

.success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.warning {
    background-color: #fff3cd;
    color: #856404;
    border: 1px solid #ffeaa7;
}

.error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

// script.js
function calculateGrade() {
    const scoreInput = document.getElementById('score');
    const resultDiv = document.getElementById('result');
    const score = parseInt(scoreInput.value);
    
    // Валидация ввода
    if (isNaN(score) || score < 0 || score > 100) {
        resultDiv.textContent = 'Пожалуйста, введите число от 0 до 100';
        resultDiv.className = 'result error';
        return;
    }
    
    let grade;
    let message;
    
    // Использование условных конструкций
    if (score >= 90) {
        grade = 5;
        message = 'Отлично!';
    } else if (score >= 75) {
        grade = 4;
        message = 'Хорошо!';
    } else if (score >= 60) {
        grade = 3;
        message = 'Удовлетворительно';
    } else {
        grade = 2;
        message = 'Неудовлетворительно';
    }
    
    // Использование оператора switch для дополнительной информации
    switch(grade) {
        case 5:
            message += ' - Превосходный результат!';
            break;
        case 4:
            message += ' - Хорошая работа!';
            break;
        case 3:
            message += ' - Нужно подтянуть знания';
            break;
        default:
            message += ' - Требуется дополнительное обучение';
    }
    
    resultDiv.innerHTML = `
        <strong>Результат:</strong><br>
        Балл: ${score}<br>
        Оценка: ${grade}<br>
        ${message}
    `;
    
    // Изменение цвета в зависимости от оценки
    if (grade >= 4) {
        resultDiv.className = 'result success';
    } else if (grade === 3) {
        resultDiv.className = 'result warning';
    } else {
        resultDiv.className = 'result error';
    }
}

// Дополнительная функция для демонстрации циклов
function demonstrateLoops() {
    console.log("Демонстрация циклов:");
    
    // Цикл for
    console.log("Цикл for (числа от 1 до 5):");
    for (let i = 1; i <= 5; i++) {
        console.log(i);
    }
    
    // Цикл while
    console.log("Цикл while (четные числа до 10):");
    let j = 2;
    while (j <= 10) {
        console.log(j);
        j += 2;
    }
    
    // Цикл do...while
    console.log("Цикл do...while (обратный отсчет):");
    let k = 5;
    do {
        console.log(k);
        k--;
    } while (k > 0);
}

Варианты заданий

Вариант 1: Калькулятор индекса массы тела (ИМТ)
Вариант 2: Конвертер валют (рубли в доллары/евро)
Вариант 3: Генератор случайных чисел с фильтрацией
Вариант 4: Проверка числа на простоту
Вариант 5: Калькулятор факториала числа
Вариант 6: Определение високосного года
Вариант 7: Генератор таблицы умножения
Вариант 8: Проверка палиндрома
Вариант 9: Калькулятор площади геометрических фигур
Вариант 10: Конвертер температур (Цельсий/Фаренгейт)
Вариант 11: Определение времени суток
Вариант 12: Сумма и произведение цифр числа
Вариант 13: Генератор последовательности Фибоначчи
Вариант 14: Проверка совершенного числа
Вариант 15: Калькулятор скидок
Критерии оценки

5 (Отлично):

    Программа работает корректно без ошибок
    Код хорошо структурирован и читаем
    Использованы соответствующие управляющие конструкции
    Присутствует обработка ошибок ввода
    Интерфейс интуитивно понятен

4 (Хорошо):

    Программа работает с незначительными недочетами
    Код в основном читаем
    Основные функции реализованы правильно
    Есть базовая валидация ввода

3 (Удовлетворительно):

    Программа работает с ограничениями
    Есть ошибки в логике или синтаксисе
    Отсутствует обработка ошибок
    Интерфейс требует доработки

2 (Неудовлетворительно):

    Программа не работает
    Код содержит критические ошибки
    Задание не выполнено

Контрольные вопросы

    Какие типы циклов существуют в JavaScript и чем они отличаются?
    В чем разница между операторами == и ===?
    Как работает оператор switch и когда его целесообразно использовать?
    Что такое Truthy и Falsy значения в JavaScript?
    Как прервать выполнение цикла досрочно?
    Какие существуют способы объявления переменных в JavaScript?
    Как работает тернарный оператор?
    Что такое область видимости переменных?
    Как преобразовать строку в число в JavaScript?
    Какие методы существуют для работы со строками?

README.md (пример для варианта 1)

# Практическая работа №1
## Базовые операции и управляющие конструкции в Javascript

### Вариант 1: Калькулятор индекса массы тела (ИМТ)

#### Задание
Создайте программу, которая рассчитывает индекс массы тела (ИМТ) на основе введенных пользователем роста и веса. Программа должна:
- Принимать рост (в см) и вес (в кг)
- Рассчитывать ИМТ по формуле: вес / (рост в метрах)^2
- Выводить категорию веса согласно стандартной классификации ИМТ

#### Реализация

html <!DOCTYPE html>

<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Калькулятор ИМТ</title>
<link rel="stylesheet" href="styles.css">

<div class="container">
    <h1>Калькулятор индекса массы тела (ИМТ)</h1>
    <div class="input-group">
        <label for="height">Рост (см):</label>
        <input type="number" id="height" placeholder="Введите рост">

        <label for="weight">Вес (кг):</label>
        <input type="number" id="weight" placeholder="Введите вес">

        <button onclick="calculateBMI()">Рассчитать ИМТ</button>
    </div>
    <div id="result" class="result"></div>
</div>
<script src="script.js"></script>


javascript function calculateBMI() {

const heightInput = document.getElementById('height');
const weightInput = document.getElementById('weight');
const resultDiv = document.getElementById('result');

const height = parseFloat(heightInput.value);
const weight = parseFloat(weightInput.value);

// Валидация ввода
if (isNaN(height) || isNaN(weight) || height <= 0 || weight <= 0) {
    resultDiv.textContent = 'Пожалуйста, введите корректные значения роста и веса';
    resultDiv.className = 'result error';
    return;
}

// Расчет ИМТ
const heightInMeters = height / 100;
const bmi = weight / (heightInMeters * heightInMeters);
const roundedBMI = bmi.toFixed(2);

// Определение категории
let category;
let colorClass;

if (bmi < 18.5) {
    category = 'Недостаточный вес';
    colorClass = 'warning';
} else if (bmi < 25) {
    category = 'Нормальный вес';
    colorClass = 'success';
} else if (bmi < 30) {
    category = 'Избыточный вес';
    colorClass = 'warning';
} else {
    category = 'Ожирение';
    colorClass = 'error';
}

resultDiv.innerHTML = `
    <strong>Результаты расчета:</strong><br>
    Ваш ИМТ: <strong>${roundedBMI}</strong><br>
    Категория: <strong>${category}</strong>
`;
resultDiv.className = `result ${colorClass}`;

}


#### Скриншоты работы программы

![Главный экран](images/main-screen.png)
*Главный экран программы*

![Результат расчета](images/result.png)
*Результат расчета ИМТ*

#### Инструкция по запуску
1. Откройте файл `index.html` в браузере
2. Введите значения роста и веса
3. Нажмите кнопку "Рассчитать ИМТ"
4. Просмотрите результат и категорию веса

#### Особенности реализации
- Валидация входных данных
- Использование условных операторов для классификации
- Форматирование вывода результатов
- Визуальное оформление в зависимости от категории

Структура репозитория в Gogs

practical-work-js-basics/
│
├── index.html
├── styles.css
├── script.js
├── images/
│   ├── main-screen.png
│   └── result.png
└── README.md

Инструкция по загрузке в Gogs

    Создайте новый репозиторий в Gogs

    Клонируйте репозиторий локально:

    git clone http://your-gogs-server/username/practical-work-js-basics.git

    Скопируйте файлы проекта в папку репозитория

    Добавьте файлы и сделайте коммит:

    git add .
    git commit -m "Практическая работа: Базовые операции JavaScript"

    Загрузите в Gogs:

    git push origin main

